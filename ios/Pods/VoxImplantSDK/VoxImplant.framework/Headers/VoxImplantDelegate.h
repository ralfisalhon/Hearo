/*
 *  Copyright (c) 2011-2018, Zingaya, Inc. All rights reserved.
 */

#import <Foundation/Foundation.h>

struct VoxImplantNetworkInfo {
    unsigned long packetLoss;
};

DEPRECATED_MSG_ATTRIBUTE("Use <VICallDelegate>, <VIClientSessionDelegate> and <VIClientCallManagerDelegate>. Please see details in each particular method.")
@protocol VoxImplantDelegate <NSObject>

@optional
/**
 * Connection with Voximplant cloud established
 */
- (void)onConnectionSuccessful DEPRECATED_MSG_ATTRIBUTE("Use <[VIClientSessionDelegate clientSessionDidConnect:]> instead.");

/**
 * Connection with cloud closed
 */
- (void)onConnectionClosed DEPRECATED_MSG_ATTRIBUTE("Use <[VIClientSessionDelegate clientSessionDidDisconnect:]> instead.");

/**
 * Connection with cloud failed
 *
 * @param reason Error message
 */
- (void)onConnectionFailedWithError:(NSString *)reason DEPRECATED_MSG_ATTRIBUTE("Use <[VIClientSessionDelegate client:sessionDidFailConnectWithError:]> instead.");

/**
 * Triggered if login attempt was successful
 *
 * @param displayName Full name of logged in user
 * @param authParams  Auth params
 *
 * Example structure of auth params:
 * ```json
 * {"accessExpire" : seconds_to_expire ,
 *  "accessToken" : "accessToken_abcdef..." ,
 *  "refreshExpire" : refresh_to_expire ,
 *  "refreshToken" : "refreshToken_abcdef..." }
 * ```
 */
- (void)onLoginSuccessfulWithDisplayName:(NSString *)displayName andAuthParams:(NSDictionary *)authParams DEPRECATED_MSG_ATTRIBUTE("Use completion handler in login API used to login to VoxImplant: <[VIClient loginWithUser:password:success:failure:]> or <[VIClient loginWithUser:token:success:failure:]> or <[VIClient loginWithUser:oneTimeKey:success:failure:]>.");

/**
 * Triggered if login attempt failed
 *
 * @param errorCode Numeric error code
 */
- (void)onLoginFailedWithErrorCode:(NSNumber *)errorCode DEPRECATED_MSG_ATTRIBUTE("Use completion handler in login API used to login to VoxImplant: <[VIClient loginWithUser:password:success:failure:]> or <[VIClient loginWithUser:token:success:failure:]> or <[VIClient loginWithUser:oneTimeKey:success:failure:]>");

/**
 * Returns one time key generated by the login server as a result of requestOneTimeLoginKey.
 *
 * @param key One time key
 */
- (void)onOneTimeKeyGenerated:(NSString *)key DEPRECATED_MSG_ATTRIBUTE("Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.");

/**
 * Triggered when refresh of login tokens failed
 *
 * @param errorCode Error code
 */
- (void)onRefreshTokenFailed:(NSNumber *)errorCode DEPRECATED_MSG_ATTRIBUTE("Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.");

/**
 * Triggered when refresh of login tokens finished successfully
 *
 * @param authParams Auth params
 */
- (void)onRefreshTokenSuccess:(NSDictionary *)authParams DEPRECATED_MSG_ATTRIBUTE("Use completion handler in <[VIClient requestOneTimeKeyWithUser:result:]> instead.");

/**
 * Incoming call arrives
 *
 * @param callId      Id of call
 * @param from        SIP URI of caller
 * @param displayName Displayed name of caller
 * @param videoCall   Incoming video call flag
 * @param headers     Optional headers passed with event
 */
- (void)onIncomingCall:(NSString *)callId caller:(NSString *)from named:(NSString *)displayName withVideo:(BOOL)videoCall withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VIClientCallManagerDelegate client:didReceiveIncomingCall:withIncomingVideo:headers:]> instead.");

/**
 * Call established
 *
 * @param callId  id of call
 * @param headers Optional headers passed with event
 */
- (void)onCallConnected:(NSString *)callId withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didConnectWithHeaders:]> instead.");

/**
 * Call terminated
 *
 * @param callId  id of call
 * @param headers Optional headers passed with event
 */
- (void)onCallDisconnected:(NSString *)callId withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didDisconnectWithHeaders:answeredElsewhere:]> instead.");

/**
 * Call ringing. You should start playing call progress tone now
 *
 * @param callId  id of call
 * @param headers Optional headers passed with event
 */
- (void)onCallRinging:(NSString *)callId withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:startRingingWithHeaders:]> instead.");

/**
 * Call failed
 *
 * @param callId  Id of call
 * @param code    Status code
 * @param reason  Status message
 * @param headers Optional headers passed with event
 */
- (void)onCallFailed:(NSString *)callId withCode:(int)code andReason:(NSString *)reason withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didFailWithError:headers:]> instead.");

/**
 * Call audio started. You should stop playing progress tone when event is received
 *
 * @param callId Id of call
 */
- (void)onCallAudioStarted:(NSString *)callId DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate callDidStartAudio:]> instead.");

/**
 * Info received inside a call
 *
 * @param callId  Id of call
 * @param type    MIME type of info
 * @param content Body of info message
 * @param headers Optional headers passed with event
 */
- (void)onSIPInfoReceivedInCall:(NSString *)callId withType:(NSString *)type andContent:(NSString *)content withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didReceiveInfo:type:headers:]> instead.");

/**
 * Instant message received inside a call
 *
 * @param callId  Id of call
 * @param text    Message text
 * @param headers Optional headers passed with event
 */
- (void)onMessageReceivedInCall:(NSString *)callId withText:(NSString *)text withHeaders:(NSDictionary *)headers DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didReceiveMessage:headers:]> instead.");

/**
 * Event dispatched when packet loss data received from Voximplant servers
 *
 * @param callId Id of call
 * @param stats  VoxImplantNetworkInfo
 */
- (void)onNetStatsReceivedInCall:(NSString *)callId withStats:(const struct VoxImplantNetworkInfo *)stats DEPRECATED_MSG_ATTRIBUTE("Use <[VICallDelegate call:didReceiveStatistics:]> instead.");

/**
 * Triggered when new video frame is available for preprocessing.
 *
 * @param pixelBuffer Video frame pixel buffer
 * @param rotation    Video rotation
 */
- (void)onPreprocessCameraCapturedVideo:(CVPixelBufferRef)pixelBuffer rotation:(int)rotation DEPRECATED_MSG_ATTRIBUTE("Use <[VIVideoPreprocessDelegate preprocessVideoFrame:rotation:]> instead.");

@end
